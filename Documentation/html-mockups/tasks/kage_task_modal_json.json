{
  "component": "EnhancedTaskCreationModal",
  "description": "Complete task creation modal with type-specific fields, shopping list functionality, and advanced options",
  "version": "2.0",
  "structure": {
    "modal_overlay": {
      "component": "ModalOverlay",
      "props": {
        "className": "modal-overlay",
        "onClick": "closeModal",
        "background": "rgba(0, 0, 0, 0.6)",
        "position": "fixed",
        "zIndex": 1000,
        "display": "flex",
        "alignItems": "center",
        "justifyContent": "center"
      },
      "children": ["modal_container"]
    },
    "modal_container": {
      "component": "ModalContainer",
      "props": {
        "className": "modal",
        "maxWidth": "500px",
        "maxHeight": "90vh",
        "borderRadius": "20px",
        "background": "white",
        "boxShadow": "0 20px 60px rgba(0, 0, 0, 0.3)",
        "animation": "modalSlideUp 0.3s ease-out",
        "overflow": "hidden"
      },
      "children": ["modal_header", "modal_body", "modal_footer"]
    },
    "modal_header": {
      "component": "ModalHeader",
      "props": {
        "className": "modal-header",
        "padding": "24px 24px 16px",
        "borderBottom": "1px solid #f1f5f9",
        "display": "flex",
        "alignItems": "center",
        "justifyContent": "space-between"
      },
      "children": ["modal_title", "close_button"]
    },
    "modal_title": {
      "component": "Title",
      "props": {
        "className": "modal-title",
        "text": "New Task",
        "fontSize": "24px",
        "fontWeight": "700",
        "color": "#2d3748"
      }
    },
    "close_button": {
      "component": "CloseButton",
      "props": {
        "className": "close-btn",
        "onClick": "closeModal",
        "icon": "‚úï",
        "size": "36px",
        "borderRadius": "8px",
        "background": "#f8fafc",
        "hoverBackground": "#e2e8f0"
      }
    },
    "modal_body": {
      "component": "ModalBody",
      "props": {
        "className": "modal-body",
        "padding": "0 24px 24px",
        "maxHeight": "calc(90vh - 160px)",
        "overflowY": "auto"
      },
      "children": [
        "task_type_section",
        "core_fields_section",
        "type_specific_fields",
        "priority_section",
        "due_date_section",
        "goal_linking_section",
        "subtasks_section",
        "advanced_options"
      ]
    },
    "task_type_section": {
      "component": "TaskTypeSection",
      "props": {
        "className": "task-type-section",
        "marginBottom": "24px"
      },
      "children": ["task_type_label", "task_types_grid"]
    },
    "task_type_label": {
      "component": "SectionLabel",
      "props": {
        "className": "section-label",
        "text": "Task Type",
        "fontSize": "14px",
        "fontWeight": "600",
        "color": "#475569"
      }
    },
    "task_types_grid": {
      "component": "TaskTypesGrid",
      "props": {
        "className": "task-types",
        "display": "grid",
        "gridTemplateColumns": "repeat(3, 1fr)",
        "gap": "12px"
      },
      "children": ["standard_type", "to_buy_type", "deadline_type"]
    },
    "standard_type": {
      "component": "TaskTypeOption",
      "props": {
        "className": "task-type selected",
        "onClick": "selectTaskType",
        "type": "standard",
        "icon": "‚úÖ",
        "name": "Standard",
        "description": "Regular task",
        "defaultSelected": true,
        "borderColor": "#3b82f6",
        "selectedBackground": "#eff6ff"
      }
    },
    "to_buy_type": {
      "component": "TaskTypeOption",
      "props": {
        "className": "task-type",
        "onClick": "selectTaskType",
        "type": "to-buy",
        "icon": "üõí",
        "name": "To-Buy",
        "description": "Shopping list",
        "borderColor": "#3b82f6",
        "selectedBackground": "#eff6ff"
      }
    },
    "deadline_type": {
      "component": "TaskTypeOption",
      "props": {
        "className": "task-type",
        "onClick": "selectTaskType",
        "type": "deadline",
        "icon": "‚è∞",
        "name": "Deadline",
        "description": "Time-sensitive",
        "borderColor": "#3b82f6",
        "selectedBackground": "#eff6ff"
      }
    },
    "core_fields_section": {
      "component": "CoreFieldsSection",
      "children": ["task_name_field", "description_field"]
    },
    "task_name_field": {
      "component": "FormField",
      "props": {
        "className": "form-section",
        "marginBottom": "20px"
      },
      "children": ["task_name_label", "task_name_input"]
    },
    "task_name_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Task Name *",
        "required": true
      }
    },
    "task_name_input": {
      "component": "TextInput",
      "props": {
        "className": "form-input",
        "placeholder": "What needs to be done?",
        "maxLength": 100,
        "required": true,
        "onInput": "handleAutoSave",
        "validation": "validateTask"
      }
    },
    "description_field": {
      "component": "FormField",
      "props": {
        "className": "form-section",
        "marginBottom": "20px"
      },
      "children": ["description_label", "description_textarea"]
    },
    "description_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Description (Optional)"
      }
    },
    "description_textarea": {
      "component": "Textarea",
      "props": {
        "className": "form-input form-textarea",
        "placeholder": "Add more details about this task...",
        "maxLength": 500,
        "onInput": "handleAutoSave",
        "minHeight": "80px",
        "resize": "vertical"
      }
    },
    "type_specific_fields": {
      "component": "TypeSpecificFields",
      "children": ["to_buy_fields", "deadline_fields"]
    },
    "to_buy_fields": {
      "component": "ToBuyFields",
      "props": {
        "className": "type-specific-fields",
        "id": "toBuyFields",
        "display": "none",
        "showWhen": "selectedTaskType === 'to-buy'"
      },
      "note": "To-Buy tasks use shopping list items instead of separate fields"
    },
    "deadline_fields": {
      "component": "DeadlineFields",
      "props": {
        "className": "type-specific-fields",
        "id": "deadlineFields",
        "display": "none",
        "showWhen": "selectedTaskType === 'deadline'"
      },
      "children": ["deadline_label", "deadline_grid", "deadline_warning"]
    },
    "deadline_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Deadline Details"
      }
    },
    "deadline_grid": {
      "component": "DeadlineGrid",
      "props": {
        "className": "type-specific-grid deadline-grid",
        "display": "grid",
        "gridTemplateColumns": "1fr",
        "gap": "12px"
      },
      "children": ["consequence_input", "deadline_type_select"]
    },
    "consequence_input": {
      "component": "TextInput",
      "props": {
        "className": "type-specific-input",
        "placeholder": "Consequence if missed (optional)",
        "type": "text"
      }
    },
    "deadline_type_select": {
      "component": "Select",
      "props": {
        "className": "type-specific-input",
        "options": [
          {"value": "work", "text": "Work"},
          {"value": "personal", "text": "Personal"},
          {"value": "legal", "text": "Legal"},
          {"value": "other", "text": "Other"}
        ],
        "defaultValue": "work"
      }
    },
    "deadline_warning": {
      "component": "WarningMessage",
      "props": {
        "className": "deadline-warning",
        "background": "#fef2f2",
        "border": "1px solid #fecaca",
        "borderRadius": "8px",
        "padding": "12px",
        "marginTop": "8px"
      },
      "children": ["deadline_warning_text"]
    },
    "deadline_warning_text": {
      "component": "WarningText",
      "props": {
        "className": "deadline-warning-text",
        "text": "‚ö†Ô∏è Deadline tasks require a due date and automatically get high priority",
        "fontSize": "12px",
        "color": "#dc2626",
        "fontWeight": "500"
      }
    },
    "priority_section": {
      "component": "PrioritySection",
      "props": {
        "className": "priority-section",
        "marginBottom": "20px"
      },
      "children": ["priority_label", "priority_grid"]
    },
    "priority_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Priority"
      }
    },
    "priority_grid": {
      "component": "PriorityGrid",
      "props": {
        "className": "priority-grid",
        "display": "grid",
        "gridTemplateColumns": "repeat(5, 1fr)",
        "gap": "8px"
      },
      "children": ["urgent_priority", "high_priority", "medium_priority", "low_priority", "none_priority"]
    },
    "urgent_priority": {
      "component": "PriorityOption",
      "props": {
        "className": "priority-option",
        "onClick": "selectPriority",
        "value": 1,
        "icon": "üî¥",
        "label": "Urgent",
        "color": "#ef4444"
      }
    },
    "high_priority": {
      "component": "PriorityOption",
      "props": {
        "className": "priority-option",
        "onClick": "selectPriority",
        "value": 2,
        "icon": "üü†",
        "label": "High",
        "color": "#f97316"
      }
    },
    "medium_priority": {
      "component": "PriorityOption",
      "props": {
        "className": "priority-option selected",
        "onClick": "selectPriority",
        "value": 3,
        "icon": "üü°",
        "label": "Medium",
        "color": "#eab308",
        "defaultSelected": true
      }
    },
    "low_priority": {
      "component": "PriorityOption",
      "props": {
        "className": "priority-option",
        "onClick": "selectPriority",
        "value": 4,
        "icon": "üü¢",
        "label": "Low",
        "color": "#22c55e"
      }
    },
    "none_priority": {
      "component": "PriorityOption",
      "props": {
        "className": "priority-option",
        "onClick": "selectPriority",
        "value": 5,
        "icon": "‚ö™",
        "label": "None",
        "color": "#6b7280"
      }
    },
    "due_date_section": {
      "component": "DueDateSection",
      "props": {
        "className": "due-date-section",
        "marginBottom": "20px"
      },
      "children": ["due_date_label", "date_time_container", "quick_date_options"]
    },
    "due_date_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Due Date & Time (Optional)"
      }
    },
    "date_time_container": {
      "component": "DateTimeContainer",
      "props": {
        "className": "date-time-container",
        "display": "grid",
        "gridTemplateColumns": "1fr 1fr",
        "gap": "12px",
        "marginBottom": "12px"
      },
      "children": ["date_input", "time_input"]
    },
    "date_input": {
      "component": "DateInput",
      "props": {
        "className": "date-input",
        "type": "date",
        "id": "dueDateInput",
        "min": "today",
        "onChange": "validateTask"
      }
    },
    "time_input": {
      "component": "TimeInput",
      "props": {
        "className": "time-input",
        "type": "time",
        "id": "dueTimeInput"
      }
    },
    "quick_date_options": {
      "component": "QuickDateOptions",
      "props": {
        "className": "quick-date-options",
        "display": "flex",
        "gap": "8px",
        "flexWrap": "wrap"
      },
      "children": ["today_btn", "tomorrow_btn", "this_week_btn", "next_week_btn"]
    },
    "today_btn": {
      "component": "QuickDateButton",
      "props": {
        "className": "quick-date-btn",
        "onClick": "setQuickDate",
        "period": "today",
        "text": "Today",
        "time": "18:00"
      }
    },
    "tomorrow_btn": {
      "component": "QuickDateButton",
      "props": {
        "className": "quick-date-btn",
        "onClick": "setQuickDate",
        "period": "tomorrow",
        "text": "Tomorrow",
        "time": "09:00"
      }
    },
    "this_week_btn": {
      "component": "QuickDateButton",
      "props": {
        "className": "quick-date-btn",
        "onClick": "setQuickDate",
        "period": "thisWeek",
        "text": "This Week",
        "time": "17:00",
        "targetDay": "Friday"
      }
    },
    "next_week_btn": {
      "component": "QuickDateButton",
      "props": {
        "className": "quick-date-btn",
        "onClick": "setQuickDate",
        "period": "nextWeek",
        "text": "Next Week",
        "time": "09:00",
        "targetDay": "Monday"
      }
    },
    "goal_linking_section": {
      "component": "GoalLinkingSection",
      "props": {
        "className": "goal-linking",
        "id": "goalLinkingSection",
        "marginBottom": "20px",
        "hideWhen": "selectedTaskType === 'to-buy'"
      },
      "children": ["goal_toggle_container", "goal_select"]
    },
    "goal_toggle_container": {
      "component": "GoalToggleContainer",
      "props": {
        "className": "goal-toggle-container",
        "display": "flex",
        "alignItems": "center",
        "justifyContent": "space-between",
        "marginBottom": "12px"
      },
      "children": ["goal_toggle_label", "goal_toggle_switch"]
    },
    "goal_toggle_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Link to Goal?",
        "margin": "0"
      }
    },
    "goal_toggle_switch": {
      "component": "ToggleSwitch",
      "props": {
        "className": "toggle-switch active",
        "id": "goalToggle",
        "onClick": "toggleGoalLink",
        "defaultActive": true,
        "width": "48px",
        "height": "24px",
        "activeColor": "#3b82f6"
      },
      "children": ["toggle_knob"]
    },
    "toggle_knob": {
      "component": "ToggleKnob",
      "props": {
        "className": "toggle-knob",
        "width": "20px",
        "height": "20px",
        "borderRadius": "10px",
        "background": "white",
        "boxShadow": "0 1px 3px rgba(0, 0, 0, 0.2)"
      }
    },
    "goal_select": {
      "component": "GoalSelect",
      "props": {
        "className": "goal-select",
        "id": "goalSelect",
        "options": [
          {"value": "", "text": "Select a goal..."},
          {"value": "1", "text": "üèÉ Get Fit & Healthy"},
          {"value": "2", "text": "üöÄ Launch Side Project"},
          {"value": "3", "text": "üìö Learn Spanish"},
          {"value": "4", "text": "üßò Mindfulness Practice"},
          {"value": "new", "text": "+ Create New Goal"}
        ]
      }
    },
    "subtasks_section": {
      "component": "SubtasksSection",
      "props": {
        "className": "subtasks-section",
        "background": "#f8fafc",
        "borderRadius": "12px",
        "padding": "20px",
        "marginBottom": "20px"
      },
      "children": ["subtasks_header", "subtasks_list"]
    },
    "subtasks_header": {
      "component": "SubtasksHeader",
      "props": {
        "className": "subtasks-header",
        "display": "flex",
        "alignItems": "center",
        "justifyContent": "space-between",
        "marginBottom": "16px"
      },
      "children": ["subtasks_title", "add_subtask_btn"]
    },
    "subtasks_title": {
      "component": "SubtasksTitle",
      "props": {
        "className": "subtasks-title",
        "id": "subtasksTitle",
        "text": "Sub-tasks (Optional)",
        "dynamicText": {
          "standard": "Sub-tasks (Optional)",
          "deadline": "Sub-tasks (Optional)",
          "to-buy": "Shopping List"
        },
        "fontSize": "14px",
        "fontWeight": "600",
        "color": "#2d3748"
      }
    },
    "add_subtask_btn": {
      "component": "AddSubtaskButton",
      "props": {
        "className": "add-subtask-btn",
        "id": "addSubtaskBtn",
        "onClick": "addSubtask",
        "text": "+ Add",
        "dynamicText": {
          "standard": "+ Add",
          "deadline": "+ Add",
          "to-buy": "+ Add Item"
        },
        "background": "#3b82f6",
        "hoverBackground": "#2563eb"
      }
    },
    "subtasks_list": {
      "component": "SubtasksList",
      "props": {
        "className": "subtasks-list",
        "id": "subtasksList",
        "display": "flex",
        "flexDirection": "column",
        "gap": "8px"
      },
      "children": ["default_subtask"]
    },
    "default_subtask": {
      "component": "SubtaskItem",
      "props": {
        "className": "subtask-item",
        "id": "defaultSubtask",
        "type": "regular"
      },
      "children": ["subtask_checkbox", "subtask_input", "remove_subtask_btn"]
    },
    "subtask_checkbox": {
      "component": "SubtaskCheckbox",
      "props": {
        "className": "subtask-checkbox",
        "width": "16px",
        "height": "16px",
        "border": "2px solid #cbd5e1",
        "borderRadius": "4px"
      }
    },
    "subtask_input": {
      "component": "SubtaskInput",
      "props": {
        "className": "subtask-input",
        "id": "defaultSubtaskInput",
        "placeholder": "Break this task into smaller steps...",
        "dynamicPlaceholder": {
          "standard": "Break this task into smaller steps...",
          "deadline": "Break this task into smaller steps...",
          "to-buy": "Item name (e.g., Milk, Bread, etc.)"
        },
        "flex": "1",
        "background": "transparent",
        "border": "none"
      }
    },
    "remove_subtask_btn": {
      "component": "RemoveSubtaskButton",
      "props": {
        "className": "remove-subtask",
        "onClick": "removeSubtask",
        "text": "‚úï",
        "color": "#ef4444",
        "hoverOpacity": "1"
      }
    },
    "shopping_item": {
      "component": "ShoppingItem",
      "props": {
        "className": "subtask-item shopping-item",
        "type": "shopping-item",
        "background": "white",
        "border": "1px solid #e2e8f0",
        "borderRadius": "12px",
        "padding": "12px 16px",
        "marginBottom": "8px"
      },
      "children": ["shopping_item_header"]
    },
    "shopping_item_header": {
      "component": "ShoppingItemHeader",
      "props": {
        "className": "shopping-item-header",
        "display": "flex",
        "alignItems": "center",
        "gap": "12px"
      },
      "children": ["shopping_checkbox", "shopping_qty_container", "shopping_item_name", "shopping_remove_btn"]
    },
    "shopping_checkbox": {
      "component": "SubtaskCheckbox",
      "props": {
        "className": "subtask-checkbox"
      }
    },
    "shopping_qty_container": {
      "component": "ShoppingQtyContainer",
      "props": {
        "className": "shopping-qty-container",
        "display": "flex",
        "alignItems": "center",
        "gap": "6px",
        "minWidth": "60px",
        "flexShrink": "0"
      },
      "children": ["shopping_qty_input", "shopping_qty_label"]
    },
    "shopping_qty_input": {
      "component": "ShoppingQtyInput",
      "props": {
        "className": "shopping-qty-input",
        "type": "number",
        "min": "1",
        "value": "1",
        "width": "40px",
        "padding": "4px 6px",
        "textAlign": "center",
        "fontSize": "12px"
      }
    },
    "shopping_qty_label": {
      "component": "ShoppingQtyLabel",
      "props": {
        "className": "shopping-qty-label",
        "text": "√ó",
        "fontSize": "11px",
        "color": "#64748b",
        "fontWeight": "500"
      }
    },
    "shopping_item_name": {
      "component": "ShoppingItemName",
      "props": {
        "className": "subtask-input shopping-item-name",
        "placeholder": "Item name (e.g., Milk, Bread, etc.)",
        "flex": "1",
        "minWidth": "0",
        "padding": "8px 12px",
        "borderRadius": "6px",
        "fontSize": "14px",
        "background": "#f8fafc"
      }
    },
    "shopping_remove_btn": {
      "component": "RemoveSubtaskButton",
      "props": {
        "className": "remove-subtask",
        "onClick": "removeSubtask"
      }
    },
    "advanced_options": {
      "component": "AdvancedOptions",
      "props": {
        "className": "advanced-options",
        "marginBottom": "24px"
      },
      "children": ["advanced_toggle", "advanced_content"]
    },
    "advanced_toggle": {
      "component": "AdvancedToggle",
      "props": {
        "className": "advanced-toggle",
        "onClick": "toggleAdvanced",
        "display": "flex",
        "alignItems": "center",
        "gap": "8px",
        "cursor": "pointer",
        "marginBottom": "16px",
        "padding": "8px 0"
      },
      "children": ["advanced_toggle_icon", "advanced_toggle_text"]
    },
    "advanced_toggle_icon": {
      "component": "AdvancedToggleIcon",
      "props": {
        "className": "advanced-toggle-icon",
        "text": "‚ñ∂",
        "fontSize": "12px",
        "color": "#64748b",
        "transition": "transform 0.2s",
        "expandedTransform": "rotate(90deg)"
      }
    },
    "advanced_toggle_text": {
      "component": "AdvancedToggleText",
      "props": {
        "className": "advanced-toggle-text",
        "text": "Advanced Options",
        "fontSize": "14px",
        "fontWeight": "600",
        "color": "#475569"
      }
    },
    "advanced_content": {
      "component": "AdvancedContent",
      "props": {
        "className": "advanced-content",
        "id": "advancedContent",
        "display": "none",
        "animation": "slideDown 0.2s ease-out"
      },
      "children": ["advanced_grid"]
    },
    "advanced_grid": {
      "component": "AdvancedGrid",
      "props": {
        "className": "advanced-grid",
        "display": "grid",
        "gap": "16px"
      },
      "children": ["tags_field", "notes_field", "reminder_field", "repeat_field"]
    },
    "tags_field": {
      "component": "TagsField",
      "children": ["tags_label", "tags_input"]
    },
    "tags_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Tags"
      }
    },
    "tags_input": {
      "component": "TagsInput",
      "props": {
        "className": "advanced-input",
        "placeholder": "Add tags separated by commas...",
        "type": "text"
      }
    },
    "notes_field": {
      "component": "NotesField",
      "children": ["notes_label", "notes_textarea"]
    },
    "notes_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Notes"
      }
    },
    "notes_textarea": {
      "component": "NotesTextarea",
      "props": {
        "className": "advanced-input advanced-textarea",
        "placeholder": "Additional notes...",
        "minHeight": "60px",
        "resize": "vertical"
      }
    },
    "reminder_field": {
      "component": "ReminderField",
      "children": ["reminder_label", "reminder_select"]
    },
    "reminder_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Reminder"
      }
    },
    "reminder_select": {
      "component": "ReminderSelect",
      "props": {
        "className": "advanced-input",
        "options": [
          {"value": "", "text": "No reminder"},
          {"value": "15", "text": "15 minutes before"},
          {"value": "30", "text": "30 minutes before"},
          {"value": "60", "text": "1 hour before"},
          {"value": "1440", "text": "1 day before"}
        ]
      }
    },
    "repeat_field": {
      "component": "RepeatField",
      "children": ["repeat_label", "repeat_select"]
    },
    "repeat_label": {
      "component": "SectionLabel",
      "props": {
        "text": "Repeat"
      }
    },
    "repeat_select": {
      "component": "RepeatSelect",
      "props": {
        "className": "advanced-input",
        "options": [
          {"value": "", "text": "Never"},
          {"value": "daily", "text": "Daily"},
          {"value": "weekly", "text": "Weekly"},
          {"value": "monthly", "text": "Monthly"},
          {"value": "custom", "text": "Custom"}
        ]
      }
    },
    "modal_footer": {
      "component": "ModalFooter",
      "props": {
        "className": "modal-footer",
        "padding": "16px 24px 24px",
        "borderTop": "1px solid #f1f5f9",
        "display": "flex",
        "gap": "12px",
        "justifyContent": "flex-end"
      },
      "children": ["auto_save_status", "cancel_button", "create_task_button"]
    },
    "auto_save_text": {
      "component": "AutoSaveText",
      "props": {
        "text": "Auto-saving...",
        "dynamicText": {
          "default": "Auto-saving...",
          "saving": "Saving...",
          "saved": "Saved"
        }
      }
    },
    "cancel_button": {
      "component": "Button",
      "props": {
        "className": "btn btn-secondary",
        "onClick": "closeModal",
        "text": "Cancel",
        "padding": "12px 24px",
        "borderRadius": "10px",
        "fontSize": "14px",
        "fontWeight": "600",
        "background": "#f8fafc",
        "color": "#64748b",
        "border": "1px solid #e2e8f0",
        "hoverBackground": "#e2e8f0"
      }
    },
    "create_task_button": {
      "component": "Button",
      "props": {
        "className": "btn btn-primary",
        "onClick": "saveTask",
        "id": "saveBtn",
        "text": "Create Task",
        "padding": "12px 24px",
        "borderRadius": "10px",
        "fontSize": "14px",
        "fontWeight": "600",
        "background": "#3b82f6",
        "color": "white",
        "boxShadow": "0 2px 8px rgba(59, 130, 246, 0.3)",
        "hoverBackground": "#2563eb",
        "hoverBoxShadow": "0 4px 12px rgba(59, 130, 246, 0.4)",
        "disabledBackground": "#cbd5e1",
        "disabledColor": "#94a3b8",
        "initialDisabled": true
      }
    }
  },
  "state_management": {
    "selectedTaskType": {
      "type": "string",
      "default": "standard",
      "options": ["standard", "to-buy", "deadline"],
      "description": "Currently selected task type"
    },
    "selectedPriority": {
      "type": "number",
      "default": 3,
      "range": [1, 5],
      "description": "Selected priority level (1=Urgent, 5=None)"
    },
    "goalLinkEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Whether goal linking is enabled"
    },
    "autoSaveTimeout": {
      "type": "number",
      "default": null,
      "description": "Timeout ID for auto-save functionality"
    },
    "taskFormData": {
      "type": "object",
      "default": {
        "name": "",
        "description": "",
        "dueDate": null,
        "dueTime": null,
        "goalId": null,
        "tags": [],
        "notes": "",
        "reminderMinutes": null,
        "recurrence": null
      },
      "description": "Form data for the task being created"
    },
    "subtasks": {
      "type": "array",
      "default": [],
      "description": "Array of subtasks or shopping items"
    },
    "typeSpecificData": {
      "type": "object",
      "default": {},
      "description": "Type-specific data based on selected task type"
    },
    "validationState": {
      "type": "object",
      "default": {
        "isValid": false,
        "errors": []
      },
      "description": "Current validation state of the form"
    }
  },
  "functions": {
    "selectTaskType": {
      "description": "Handles task type selection and UI updates",
      "parameters": ["element", "type"],
      "logic": [
        "Remove 'selected' class from all task type options",
        "Add 'selected' class to clicked element",
        "Update selectedTaskType state",
        "Hide all type-specific fields",
        "Show relevant type-specific fields based on selection",
        "Update subtasks section UI (title, button text, placeholders)",
        "Auto-adjust priority based on task type",
        "Update goal linking visibility (hide for to-buy tasks)",
        "Set due date requirement for deadline tasks",
        "Convert existing subtasks to appropriate format"
      ]
    },
    "updateSubtasksSection": {
      "description": "Updates subtasks section based on task type",
      "parameters": ["taskType"],
      "logic": [
        "Update subtasks title text based on task type",
        "Update add button text based on task type",
        "Update placeholder text for inputs",
        "Show/hide goal linking section",
        "Convert existing items between regular subtasks and shopping items",
        "Preserve existing data during conversion"
      ]
    },
    "convertToShoppingItems": {
      "description": "Converts regular subtasks to shopping items",
      "parameters": [],
      "logic": [
        "Find all existing subtask items",
        "For each item, extract current input value",
        "Replace item HTML with shopping item structure",
        "Include quantity input, item name, and remove button",
        "Preserve existing text content",
        "Update CSS classes appropriately"
      ]
    },
    "convertToRegularSubtasks": {
      "description": "Converts shopping items back to regular subtasks",
      "parameters": [],
      "logic": [
        "Find all existing shopping items",
        "For each item, extract item name value",
        "Replace item HTML with regular subtask structure",
        "Include checkbox, text input, and remove button",
        "Preserve existing text content",
        "Update CSS classes appropriately"
      ]
    },
    "selectPriority": {
      "description": "Handles priority level selection",
      "parameters": ["element", "priority"],
      "logic": [
        "Remove 'selected' class from all priority options",
        "Add 'selected' class to clicked element",
        "Update selectedPriority state",
        "Trigger form validation"
      ]
    },
    "selectPriorityByValue": {
      "description": "Programmatically selects priority by value",
      "parameters": ["priority"],
      "logic": [
        "Find priority option by index",
        "Remove all existing selections",
        "Add selection to target priority",
        "Update selectedPriority state"
      ]
    },
    "setQuickDate": {
      "description": "Sets due date using quick date buttons",
      "parameters": ["period"],
      "logic": [
        "Remove active class from all quick date buttons",
        "Add active class to clicked button",
        "Calculate target date based on period",
        "Set appropriate default time based on period",
        "Update date and time inputs",
        "Format date for input compatibility"
      ]
    },
    "toggleGoalLink": {
      "description": "Toggles goal linking functionality",
      "parameters": ["element"],
      "logic": [
        "Toggle 'active' class on toggle switch",
        "Update goalLinkEnabled state",
        "Enable/disable goal select dropdown",
        "Update visual opacity of goal select"
      ]
    },
    "addSubtask": {
      "description": "Adds new subtask or shopping item",
      "parameters": [],
      "logic": [
        "Check current task type",
        "If to-buy: create shopping item with quantity and name fields",
        "If standard/deadline: create regular subtask",
        "Append new item to subtasks list",
        "Focus on the main input field of new item",
        "Update form validation state"
      ]
    },
    "removeSubtask": {
      "description": "Removes a subtask or shopping item",
      "parameters": ["element"],
      "logic": [
        "Find parent subtask item",
        "Remove item from DOM",
        "Update form validation state",
        "Trigger auto-save"
      ]
    },
    "toggleAdvanced": {
      "description": "Toggles advanced options section",
      "parameters": ["element"],
      "logic": [
        "Toggle 'expanded' class on toggle element",
        "Toggle 'expanded' class on advanced content",
        "Rotate toggle icon",
        "Show/hide advanced content with animation"
      ]
    },
    "handleAutoSave": {
      "description": "Handles auto-save functionality",
      "parameters": [],
      "logic": [
        "Show 'saving' status",
        "Clear existing auto-save timeout",
        "Set new timeout for 1.5 seconds",
        "On timeout completion: show 'saved' status",
        "Hide saved message after 2 seconds"
      ]
    },
    "validateTask": {
      "description": "Validates task form and updates save button state",
      "parameters": [],
      "logic": [
        "Check if task name input exists and has value",
        "Validate minimum task name length",
        "For deadline tasks: ensure due date is set",
        "Update save button disabled state",
        "Return validation result",
        "Handle missing DOM elements gracefully"
      ]
    },
    "collectSubtasks": {
      "description": "Collects all subtask/shopping item data",
      "parameters": [],
      "logic": [
        "Iterate through all subtask items",
        "For shopping items: collect name, quantity",
        "For regular subtasks: collect name only",
        "Filter out empty items",
        "Return structured data array with order indices",
        "Include type information for each item"
      ]
    },
    "collectTypeSpecificData": {
      "description": "Collects type-specific form data",
      "parameters": [],
      "logic": [
        "Check current task type",
        "For to-buy: no additional data (handled in shopping items)",
        "For deadline: collect consequence and deadline type",
        "For standard: no additional data",
        "Return structured type-specific data object",
        "Handle missing form elements gracefully"
      ]
    },
    "collectAdvancedData": {
      "description": "Collects advanced options data",
      "parameters": [],
      "logic": [
        "Safely extract tags, notes, reminder, and recurrence data",
        "Parse tags into array format",
        "Convert reminder to integer minutes",
        "Structure recurrence object if applicable",
        "Return clean advanced data object",
        "Handle missing advanced form elements"
      ]
    },
    "saveTask": {
      "description": "Saves the complete task data",
      "parameters": [],
      "logic": [
        "Run final validation check",
        "Collect all form data safely",
        "Combine date and time into ISO format",
        "Structure complete task data object",
        "Call API endpoint with task data",
        "Show success message",
        "Close modal on successful save"
      ]
    },
    "closeModal": {
      "description": "Closes the task creation modal",
      "parameters": [],
      "logic": [
        "Check for unsaved changes",
        "Show confirmation if needed",
        "Clear all form state",
        "Hide modal overlay",
        "Reset to default values"
      ]
    }
  },
  "validation_rules": {
    "taskName": {
      "required": true,
      "minLength": 1,
      "maxLength": 100,
      "errorMessage": "Task name is required"
    },
    "description": {
      "required": false,
      "maxLength": 500,
      "errorMessage": "Description must be under 500 characters"
    },
    "dueDate": {
      "required": "conditional",
      "requiredWhen": "selectedTaskType === 'deadline'",
      "minValue": "today",
      "errorMessage": "Deadline tasks require a due date"
    },
    "priority": {
      "required": true,
      "range": [1, 5],
      "default": 3,
      "errorMessage": "Priority must be selected"
    },
    "subtasks": {
      "maxItems": 20,
      "itemMaxLength": 200,
      "errorMessage": "Maximum 20 subtasks allowed"
    },
    "shoppingItems": {
      "nameRequired": true,
      "quantityMin": 1,
      "quantityMax": 999,
      "errorMessage": "Shopping items must have a name and valid quantity"
    },
    "tags": {
      "maxTags": 20,
      "maxTagLength": 50,
      "separator": ",",
      "errorMessage": "Maximum 20 tags, each under 50 characters"
    }
  },
  "dynamic_behavior": {
    "task_type_changes": {
      "to_standard": {
        "priority": "keep_current",
        "subtasks": "convert_to_regular",
        "goal_linking": "show",
        "due_date_required": false
      },
      "to_to_buy": {
        "priority": "set_to_low",
        "subtasks": "convert_to_shopping",
        "goal_linking": "hide",
        "due_date_required": false
      },
      "to_deadline": {
        "priority": "set_to_high",
        "subtasks": "convert_to_regular",
        "goal_linking": "show",
        "due_date_required": true
      }
    },
    "quick_date_logic": {
      "today": {
        "date": "new Date()",
        "time": "18:00"
      },
      "tomorrow": {
        "date": "new Date() + 1 day",
        "time": "09:00"
      },
      "thisWeek": {
        "date": "next Friday",
        "time": "17:00"
      },
      "nextWeek": {
        "date": "next Monday",
        "time": "09:00"
      }
    },
    "auto_save_timing": {
      "trigger_delay": "1500ms",
      "show_saved_duration": "2000ms",
      "debounce_input": true
    }
  },
  "api_structure": {
    "endpoint": "/api/tasks",
    "method": "POST",
    "request_body": {
      "name": "string (required)",
      "description": "string|null",
      "type": "enum: ['standard', 'to-buy', 'deadline']",
      "priority": "integer (1-5)",
      "status": "enum: ['pending']",
      "dueDate": "ISO8601 string|null",
      "goalId": "string|null",
      "subTasks": "array<SubTask>",
      "typeData": "object",
      "tags": "array<string>",
      "notes": "string|null",
      "reminderMinutes": "integer|null",
      "recurrence": "object|null",
      "createdAt": "ISO8601 string"
    },
    "subtask_structure": {
      "regular": {
        "name": "string",
        "isCompleted": "boolean",
        "order": "integer",
        "type": "string: 'regular'"
      },
      "shopping_item": {
        "name": "string",
        "isCompleted": "boolean",
        "order": "integer",
        "type": "string: 'shopping-item'",
        "shoppingDetails": {
          "quantity": "integer"
        }
      }
    },
    "type_specific_data": {
      "deadline": {
        "isHardDeadline": "boolean",
        "consequence": "string|null",
        "deadlineType": "enum: ['work', 'personal', 'legal', 'other']",
        "reminderIntervals": "array<integer>"
      },
      "to_buy": "object (empty)",
      "standard": "object (empty)"
    },
    "response": {
      "success": {
        "id": "string",
        "message": "string",
        "task": "Task object"
      },
      "error": {
        "message": "string",
        "errors": "array<string>"
      }
    }
  },
  "responsive_design": {
    "mobile_breakpoint": "540px",
    "mobile_changes": [
      "Single column layout for task types",
      "Stacked date/time inputs",
      "Full width modal with margins",
      "Reduced priority grid to 3 columns",
      "Vertical button stack in footer"
    ],
    "tablet_breakpoint": "768px",
    "tablet_changes": [
      "Maintain desktop layout",
      "Slightly reduced spacing"
    ]
  },
  "animations": {
    "modalSlideUp": {
      "duration": "0.3s",
      "easing": "ease-out",
      "from": {
        "transform": "translateY(20px)",
        "opacity": 0
      },
      "to": {
        "transform": "translateY(0)",
        "opacity": 1
      }
    },
    "slideDown": {
      "duration": "0.2s",
      "easing": "ease-out",
      "from": {
        "opacity": 0,
        "transform": "translateY(-10px)"
      },
      "to": {
        "opacity": 1,
        "transform": "translateY(0)"
      }
    },
    "pulse": {
      "duration": "1.5s",
      "iteration": "infinite",
      "keyframes": {
        "0%, 100%": {"opacity": 1},
        "50%": {"opacity": 0.5}
      }
    }
  },
  "accessibility": {
    "keyboard_navigation": [
      "Tab through all interactive elements",
      "Escape key closes modal",
      "Enter key submits form when focused on save button",
      "Arrow keys navigate between priority options",
      "Space bar toggles checkboxes and switches"
    ],
    "screen_reader": [
      "All inputs have proper labels",
      "Modal has aria-labelledby for title",
      "Form sections have appropriate headings",
      "Error messages are announced",
      "Dynamic content changes are announced"
    ],
    "color_contrast": [
      "All text meets WCAG AA standards (4.5:1)",
      "Focus indicators are clearly visible",
      "Error states use both color and text",
      "Color is not the only indicator of state"
    ]
  },
  "error_handling": {
    "network_errors": [
      "Show retry option for failed saves",
      "Preserve form data during network issues",
      "Display clear error messages"
    ],
    "validation_errors": [
      "Real-time validation feedback",
      "Clear error message display",
      "Focus management for error states"
    ],
    "javascript_errors": [
      "Safe element selection with null checks",
      "Graceful degradation for missing elements",
      "Fallback values for all operations"
    ]
  },
  "implementation_notes": {
    "priority_order": [
      "1. Core modal structure and basic functionality",
      "2. Task type selection and switching logic",
      "3. Form validation and auto-save",
      "4. Subtasks and shopping list functionality",
      "5. Advanced options and goal linking",
      "6. Responsive design and accessibility",
      "7. Error handling and edge cases"
    ],
    "testing_checklist": [
      "Test all task type switches",
      "Verify shopping list conversion",
      "Test form validation edge cases",
      "Check mobile responsiveness",
      "Verify keyboard navigation",
      "Test auto-save functionality",
      "Validate API data structure"
    ],
    "performance_considerations": [
      "Debounce auto-save operations",
      "Lazy load advanced options",
      "Minimize DOM manipulation during type switches",
      "Use efficient event delegation"
    ]
  }
}status": {
      "component": "AutoSaveStatus",
      "props": {
        "className": "auto-save",
        "id": "autoSaveStatus",
        "fontSize": "12px",
        "color": "#64748b",
        "savingColor": "#3b82f6"
      },
      "children": ["auto_save_dot", "auto_save_text"]
    },
    "auto_save_dot": {
      "component": "AutoSaveDot",
      "props": {
        "className": "auto-save-dot",
        "width": "6px",
        "height": "6px",
        "borderRadius": "50%",
        "animation": "pulse 1.5s infinite"
      }
    },
    "auto_save_